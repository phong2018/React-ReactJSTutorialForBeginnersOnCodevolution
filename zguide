------
* Extension 
- Simple React Snippets
- ES7 React/Redux/GraphQL/React-Native snippets
- Prettier - Code formatter
-------
* Hot Key
shift+alt+F: format code
rfce
rpce
rec
rconst
--------
$42: HTTP GET request
https://jsonplaceholder.typicode.com/

--------
$41: http and React
install: npm install axios
--------
$40: React Context (p3)
- add default value for React.createContext(...)
- ContextType to consume value 
+ only work with class component
+ suscribe single context
--------
$39: React Context (p2)
1. create the Context
2. provide a context value
3. consume the context value
--------
$38: React Context (p1)
Context provides a way to pass data through the component tree without having to pass props down manually at every level
--------
$37: Render Props (p2)
the term 'render prop' refers to a technique for sharing code between React component using a prop whose value is a function
--------
$36: Render Props (p1)
- to share common functionality between components
--------
$35: Higher Order Component(p3)
- passing down the props: {... this.props}
- tranfer parameter for HOC
--------
$34: Higher Order Component(p2)
- to share common functionality between components
- a pattern where a function take a component as an argument and returns a news component
- ex: const NewComponent =higherOrderComponent(originalComponent)
--------
$33: Higher Order Component(HOC)(p1)
--------
$32: Error Boudary
- are react Component that catch Javascript error in their child component tree, log these errors, and display a fall-back UI
- a class component becomes an error boundary by defining either or both of getDirivedStateFromError and componentDidCatch lifecycle method
-catch error in 
+ static getDirivedStateFromError(error)
+ componentDidCatch(error,info)

--------
$31: Portals 
- provide a way to render children into a DOM node thats exist outside the DOM hierachi of parent component. 
- we had one DOM element in our HTML that we were mouting the react application into.
- you can render a component onto a DOM node that is not under this root element
--------
$30: Forwading Refs: a technique to automatically passing a ref through a component to one of its childen
- use for function component
--------
$29: Refs with class Component
- to attach Refs to DOM element and classCompoent in React
- have to use for Class Component
- Special circumstances if at all you need a ref to a child component from a parent component
-------- 
$28: Refs: to access DOM node directly within react.

--------
$27: Memo: like PureComponent but use for function
--------
$26: PureComponent
- if there is no different, the component is not re-render. 
- A pure component on the orther hand implement shouldComponentUpdate with a shallow props and state comparison
- shallow comparison
+ primative Types: return true if: same value && type
+ complex type: return true if: reference the exact same object
ex: 
var a=[1,2];
var b=[1,2];
var c=a;
=> a===b //false
=> a===c //true (same object)
--------
$25: Fragments
--------
$24: Updating lifecycle method
- static getDirivedStateFromProps: called every time a component is rendered
- shouldComponentUpdate(nextProps,nextState): 
- render
- getSnapshotBeforeUpdate(preProps,preState): called right before the changes from the virtual DOM are are to be reflected in the DOM
- componentDidUpdate(preProps,preState,snapshot): called after the render is finished in the re-render cycles
--------
$23:Component Mouting lifecycle methods
+ constructor: 
+ static getDirivedStateFromProps
+ render: 
+ componentDidMount: interact with the DOM, ajax calls to load data
--------
$22: component lifecycle Method
- mouting: when an instance of a component is being created and inserted into the DOM: (4) constructor, static getDirivedStateFromProps, render, componentDidMount
- upateting: when a component is being re-rendered as a result of changes to either its props or state: (5) static getDirivedStateFromProps, shouldComponentUpdate, render, getSnapshotBeforeUpdate, compoentDidUpdate
- unmouting: (1) when a component is being removed from the DOM: componentWillUnmount
- error handling: when there is an error during rendering, in a lifecycle method, or in the constructor of any child component: (2) static getDirivedStateFromError, componentDidCatch.
--------
$21: Controlled component
--------
$20: Styling React component
- css stylesheets
- inline Styling
- css modules
- css in js libaries (styled compenents)
--------
$19: Index as key anti-pattern 
--------
$17: List rendering
- when update will re-render childs 
+ react is going to compare pre-Key & curr-Key if there different will re-render. If no, NOT re-render.
-> avoid use index in .map() to use key for list childs
--------
$16: Condition rendering
UserGreeting.js
--------
$15: Method as props
--------
$14: Binding event handler
- different: function and function call
+ function is variable
+ function call is implement function
- arrow function is functon (is variable)
--------
$11: setState
- setState(updater, [callback])
--------
$08: JSX
- React.createElement(component, props, ...children)
